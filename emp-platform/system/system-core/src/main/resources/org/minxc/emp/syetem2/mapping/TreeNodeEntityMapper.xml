<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.minxc.emp.dao.TreeNodeEntityMapper">
  <resultMap id="BaseResultMap" type="org.minxc.emp.model.TreeNodeEntity">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="KEY" jdbcType="VARCHAR" property="key" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="TREE_ID" jdbcType="VARCHAR" property="treeId" />
    <result column="PARENT_ID" jdbcType="VARCHAR" property="parentId" />
    <result column="PATH" jdbcType="VARCHAR" property="path" />
    <result column="SEQ" jdbcType="DECIMAL" property="seq" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, KEY, NAME, DESCRIPTION, TREE_ID, PARENT_ID, PATH, SEQ
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from YMMG_TREE_NODE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from YMMG_TREE_NODE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.minxc.emp.model.TreeNodeEntity">
    insert into YMMG_TREE_NODE (ID, KEY, NAME, 
      DESCRIPTION, TREE_ID, PARENT_ID, 
      PATH, SEQ)
    values (#{id,jdbcType=VARCHAR}, #{key,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{treeId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{seq,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="org.minxc.emp.model.TreeNodeEntity">
    insert into YMMG_TREE_NODE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="key != null">
        KEY,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="treeId != null">
        TREE_ID,
      </if>
      <if test="parentId != null">
        PARENT_ID,
      </if>
      <if test="path != null">
        PATH,
      </if>
      <if test="seq != null">
        SEQ,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="treeId != null">
        #{treeId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.minxc.emp.model.TreeNodeEntity">
    update YMMG_TREE_NODE
    <set>
      <if test="key != null">
        KEY = #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="treeId != null">
        TREE_ID = #{treeId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        PATH = #{path,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        SEQ = #{seq,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.minxc.emp.model.TreeNodeEntity">
    update YMMG_TREE_NODE
    set KEY = #{key,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      TREE_ID = #{treeId,jdbcType=VARCHAR},
      PARENT_ID = #{parentId,jdbcType=VARCHAR},
      PATH = #{path,jdbcType=VARCHAR},
      SEQ = #{seq,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>