<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.minxc.emp.system.core.dao.ResRoleDao">
    <resultMap id="ResRole" type="org.minxc.emp.system.core.model.ResRole">
        <id property="id" column="ID_" jdbcType="VARCHAR"/>
        <result property="systemId" column="SYSTEM_ID_" jdbcType="VARCHAR"/>
        <result property="resId" column="RES_ID_" jdbcType="VARCHAR"/>
        <result property="roleId" column="ROLE_ID_" jdbcType="VARCHAR"/>
        <result property="roleAlias" column="role_Alias" jdbcType="VARCHAR"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
        <result property="resAlias" column="resAlias" jdbcType="VARCHAR"/>
    </resultMap>


    <insert id="create" parameterType="org.minxc.emp.system.core.model.ResRole">
		INSERT INTO sys_res_role
		(ID_,SYSTEM_ID_,RES_ID_,ROLE_ID_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{systemId,jdbcType=VARCHAR}, #{resId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR})
	</insert>

    <select id="get" parameterType="java.lang.String" resultMap="ResRole">
		SELECT * FROM sys_res_role 
		WHERE 
		ID_=#{id}
	</select>

    <select id="getAllByRoleId" parameterType="java.lang.String" resultMap="ResRole">
		SELECT * FROM sys_res_role 
		WHERE 
		ROLE_ID_=#{roleId}
	</select>

    <select id="query" parameterType="java.util.Map" resultMap="ResRole">
        SELECT * FROM sys_res_role
        <where>
            <if test="whereSql!=null">
                ${whereSql}
            </if>
        </where>
        <if test="orderBySql!=null">
            ORDER BY ${orderBySql}
        </if>
        <if test="orderBySql==null">
            ORDER BY ID_ DESC
        </if>
    </select>

    <update id="update" parameterType="org.minxc.emp.system.core.model.ResRole">
		UPDATE sys_res_role SET
		SYSTEM_ID_=#{systemId,jdbcType=VARCHAR},
		RES_ID_=#{resId,jdbcType=VARCHAR},
		ROLE_ID_=#{roleId,jdbcType=VARCHAR}
		WHERE
		ID_=#{id}
	</update>

    <delete id="remove" parameterType="java.lang.String">
		DELETE FROM sys_res_role 
		WHERE
		ID_=#{id}
	</delete>

    <delete id="removeByRoleAndSystem" parameterType="java.util.Map">
		DELETE FROM sys_res_role
		WHERE 
		ROLE_ID_=#{roleId}
		AND
		SYSTEM_ID_=#{systemId}
	</delete>

    <select id="getResRoleBySystemId" parameterType="java.lang.String" resultMap="ResRole">
		select a.ALIAS_ resAlias,c.alias_ roleAlias,a.default_url_ url from sys_resource a,sys_res_role b,org_role c
			where a.SYSTEM_ID_=#{systemId} and a.ID_=b.RES_ID_ and b.ROLE_ID_=c.id_ and c.enabled_=1
	</select>

    <select id="getUrlRoleBySystemId" parameterType="java.lang.String" resultMap="ResRole">
		select a.RES_URL_ url,c.alias_ roleAlias from sys_rel_resources a,sys_res_role b,org_role c
			where b.SYSTEM_ID_=#{systemId} and a.RES_ID_=b.RES_ID_  and b.ROLE_ID_=c.id_ and c.enabled_=1
	</select>


</mapper>